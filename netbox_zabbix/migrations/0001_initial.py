# Generated by Django 5.1.7 on 2025-04-25 16:47

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('extras', '0122_charfield_null_choices'),
        ('virtualization', '0048_populate_mac_addresses'),
    ]

    operations = [
        migrations.CreateModel(
            name='ZBXConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('api_address', models.CharField(default='http://localhost', max_length=100)),
                ('web_address', models.CharField(default='http://localhost', max_length=100)),
                ('version', models.CharField(max_length=100, null=True)),
                ('connection', models.BooleanField(default=False)),
                ('token', models.CharField(default='token', max_length=100)),
                ('active', models.BooleanField(default=False)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Zabbix Configuration',
                'ordering': ('name', 'active'),
            },
        ),
        migrations.CreateModel(
            name='ZBXHost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('object_id', models.PositiveIntegerField(default=0)),
                ('zbx_host_id', models.CharField(max_length=20, unique=True)),
                ('status', models.CharField(max_length=30)),
                ('interface', models.CharField(max_length=30)),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'dcim'), ('model', 'device')), models.Q(('app_label', 'virtualization'), ('model', 'virtualmachine')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, related_name='zabbix', to='contenttypes.contenttype')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Zabbix Host',
                'verbose_name_plural': 'Zabbix Hosts',
            },
        ),
        migrations.CreateModel(
            name='ZBXHostInterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('type', models.IntegerField(default=1)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ZBXInterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('interfaceid', models.IntegerField(blank=True, null=True)),
                ('available', models.IntegerField(default=1)),
                ('hostid', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField(default=1)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('dns', models.CharField(blank=True, max_length=256, null=True)),
                ('port', models.CharField(default=10050, max_length=256)),
                ('useip', models.IntegerField(default=1)),
                ('main', models.IntegerField(default=1)),
                ('snmp_version', models.IntegerField(blank=True, default=3, null=True)),
                ('snmp_bulk', models.IntegerField(blank=True, default=1, null=True)),
                ('snmp_community', models.CharField(blank=True, max_length=256, null=True)),
                ('snmp_max_repetitions', models.IntegerField(blank=True, default=10, null=True)),
                ('snmp_securityname', models.CharField(blank=True, max_length=256, null=True)),
                ('snmp_securitylevel', models.IntegerField(blank=True, default=2, null=True)),
                ('snmp_authpassphrase', models.CharField(blank=True, default='{$SNMPV3_AUTHPASS}', null=True)),
                ('snmp_privpassphrase', models.CharField(blank=True, default='{$SNMPV3_PRIVPASS}', null=True)),
                ('snmp_authprotocol', models.IntegerField(blank=True, default=1, null=True)),
                ('snmp_privprotocol', models.IntegerField(blank=True, default=1, null=True)),
                ('snmp_contextname', models.CharField(blank=True, max_length=256, null=True)),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interfaces', to='netbox_zabbix.zbxhost')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Zabbix Interface',
                'verbose_name_plural': 'Zabbix Interfaces',
            },
        ),
        migrations.CreateModel(
            name='ZBXTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('templateid', models.CharField(max_length=100)),
                ('last_synced', models.DateTimeField()),
                ('marked_for_deletion', models.BooleanField(default=False)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Zabbix Templates',
                'verbose_name_plural': 'Zabbix Templates',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='zbxhost',
            name='templates',
            field=models.ManyToManyField(blank=True, to='netbox_zabbix.zbxtemplate'),
        ),
        migrations.CreateModel(
            name='ZBXVM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('zbx_host_id', models.CharField(max_length=20, unique=True)),
                ('status', models.CharField(max_length=30)),
                ('interface', models.CharField(max_length=30)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('templates', models.ManyToManyField(to='netbox_zabbix.zbxtemplate')),
                ('vm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zbx', to='virtualization.virtualmachine')),
            ],
            options={
                'verbose_name': 'Zabbix VMs',
                'verbose_name_plural': 'Zabbix VMs',
                'ordering': ('vm', 'zbx_host_id', 'status', 'interface'),
            },
        ),
    ]
